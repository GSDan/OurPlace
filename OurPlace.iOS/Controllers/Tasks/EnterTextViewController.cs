#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;
using CoreGraphics;
using Foundation;
using OurPlace.iOS.Controllers.Tasks;
using OurPlace.iOS.Delegates;
using UIKit;

namespace OurPlace.iOS
{
    public partial class EnterTextViewController : TaskViewController
	{
        // scroll the view for keyboard
        private NSObject _notification;
        private nfloat _scrollAmount;
        private double _animationDuration;
        private UIViewAnimationCurve _animationCurve;
        private string placeholderText = "Enter your response here!";

		public EnterTextViewController (IntPtr handle) : base (handle)
		{
            
		}

        public override void TouchesBegan(NSSet touches, UIEvent evt)
        {
            TextView.ResignFirstResponder();
            ScrollTheView(false);
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            // style the text view to look like a text field - why the hell are they different?
            TextView.Layer.BorderColor = UIColor.Gray.ColorWithAlpha(0.5f).CGColor;
            TextView.Layer.BorderWidth = 2;
            TextView.Layer.CornerRadius = 5;
            TextView.ClipsToBounds = true;

            TaskDescriptionLabel.Text = thisTask.Description;

            _notification = UIKeyboard.Notifications.ObserveWillShow((s, e) =>
            {
                _animationDuration = e.AnimationDuration;
                _animationCurve = e.AnimationCurve;

                CGRect r = UIKeyboard.FrameBeginFromNotification(e.Notification);
                _scrollAmount = r.Height;
                ScrollTheView(true);
            });

            if(!string.IsNullOrWhiteSpace(thisTask.CompletionData?.JsonData))
            {
                TextView.Text = thisTask.CompletionData.JsonData;
            }
            else
            {
                // Bootstrap for placeholder text. FML
                TextView.Delegate = new TextViewPlaceholderDelegate(TextView, placeholderText);
            }

            UIBarButtonItem customButton = new UIBarButtonItem(
                    UIImage.FromBundle("TickIcon"),
                    UIBarButtonItemStyle.Plain,
                    (s, e) => {
                        ReturnText();
                    }
                );

            NavigationItem.RightBarButtonItem = customButton;
        }

        private void ScrollTheView(bool scale)
        {
            UIView.BeginAnimations(string.Empty, IntPtr.Zero);
            UIView.SetAnimationDuration(_animationDuration);
            UIView.SetAnimationCurve(_animationCurve);

            CGRect frame = View.Frame;

            if (scale)
            {
                frame.Height -= _scrollAmount;
            }
            else
            {
                frame.Height += _scrollAmount;
            }

            View.Frame = frame;
            UIView.CommitAnimations();
        }

        private void ReturnText()
        {
            TextView.ResignFirstResponder();
            ScrollTheView(false);

            if(!string.IsNullOrWhiteSpace(thisTask.CompletionData?.JsonData) || 
               TextView.Text != placeholderText && !string.IsNullOrWhiteSpace(TextView.Text))
            {
                ReturnWithData(TextView.Text);
            }
            else
            {
                NavigationController.PopViewController(true);   
            }
        }
	}
}

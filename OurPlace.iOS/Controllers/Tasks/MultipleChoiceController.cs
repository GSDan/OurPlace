#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using Newtonsoft.Json;
using OurPlace.iOS.Controllers.Tasks;
using OurPlace.iOS.ViewSources;
using UIKit;

namespace OurPlace.iOS
{
    public partial class MultipleChoiceController : TaskViewController
	{
        private MultipleChoiceViewSource viewSource;

		public MultipleChoiceController (IntPtr handle) : base (handle)
		{
		}

		public override void ViewDidLoad()
		{
            base.ViewDidLoad();

            TaskDescriptionLabel.Text = thisTask.Description;

            UIBarButtonItem customButton = new UIBarButtonItem(
                    UIImage.FromBundle("TickIcon"),
                    UIBarButtonItemStyle.Plain,
                    (s, e) => {
                        ReturnChoice();
                    }
                );

            List<string> choices = JsonConvert.DeserializeObject<List<string>>(thisTask.JsonData);

            NavigationItem.RightBarButtonItem = customButton;

            viewSource = new MultipleChoiceViewSource(choices);
            TableView.Source = viewSource;
            TableView.RowHeight = UITableView.AutomaticDimension;
            TableView.EstimatedRowHeight = 100;
            TableView.AllowsSelection = true;
            TableView.ReloadData();

            int existing = int.TryParse(thisTask.CompletionData.JsonData, out existing) ? existing : -1;

            if(existing != -1)
            {
                // load previous selection
                viewSource.RowSelected(TableView, NSIndexPath.FromRowSection(existing, 0));   
            }
		}

        private void ReturnChoice()
        {
            int choice = viewSource.GetSelection();

            if(choice >= 0)
            {
                // something was chosen
                ReturnWithData(choice.ToString());
                return;
            }

            // nothing chosen, return without saving
            NavigationController.PopViewController(true); 
        }
	}
}

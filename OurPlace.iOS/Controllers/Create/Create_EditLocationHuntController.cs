#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;

using Foundation;
using Newtonsoft.Json;
using OurPlace.Common.Models;
using UIKit;

namespace OurPlace.iOS
{
    public partial class Create_EditLocationHuntController : Create_EditTaskController
	{
        private Map_Location thisLocation;

		public Create_EditLocationHuntController (IntPtr handle) : base (handle)
		{
		}


        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            if (!string.IsNullOrWhiteSpace(thisTask?.JsonData))
            {
                var data = JsonConvert.DeserializeObject<LocationHuntLocation>(thisTask.JsonData);

                thisLocation = new Map_Location(data.Lat, data.Long, data.Zoom);

                allowMap.On = (data.MapAvailable != null) && (bool)data.MapAvailable;

                ChosenLocationLabel.Text = string.Format("{0}, {1}", thisLocation.Lat, thisLocation.Long);
            }
        }

        public override void PrepareForSegue(UIStoryboardSegue segue, NSObject sender)
        {
            base.PrepareForSegue(segue, sender);

            if (segue.Identifier.Equals("EditLocationHuntTarget"))
            {
                var viewController = (Create_ChooseLocationController)segue.DestinationViewController;
                viewController.chosenLocation = thisLocation;
            }
        }


        // All activity editing controllers end up back here. 
        [Action("UnwindToLocationHunt:")]
        public void UnwindToLocationHunt(UIStoryboardSegue segue)
        {
            var sourceController = segue.SourceViewController as Create_ChooseLocationController;

            if (sourceController != null && sourceController.chosenLocation != null)
            {
                thisLocation = sourceController.chosenLocation;

                ChosenLocationLabel.Text = string.Format("{0}, {1}", thisLocation.Lat, thisLocation.Long);
            }
        }

        protected override void FinishButton_TouchUpInside(object sender, EventArgs e)
        {
            if(thisLocation == null)
            {
                AppUtils.ShowSimpleDialog(this, "Choose a Location", "Please choose a location for the user to navigate to.", "Got it");
                return;
            }

            if (UpdateBasicTask())
            {
                LocationHuntLocation data = new LocationHuntLocation(thisLocation.Lat, thisLocation.Long, 15f, allowMap.On);

                thisTask.JsonData = JsonConvert.SerializeObject(data);

                UpdateActivity();
                Unwind();
            }
        } 

	}
}

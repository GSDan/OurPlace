#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using Foundation;
using Newtonsoft.Json;
using OurPlace.iOS.ViewSources;
using UIKit;

namespace OurPlace.iOS
{
    public partial class Create_EditMultiChoiceController : Create_EditTaskController
    {
        private CreateMultipleChoiceViewSource viewSource;

        public Create_EditMultiChoiceController(IntPtr handle) : base(handle)
        {
        }

        public override void ViewDidLoad()
        {
            base.ViewDidLoad();

            List<string> rows = new List<string>();

            // Check if need to load previous edits
            if (!string.IsNullOrWhiteSpace(thisTask?.JsonData))
            {
                rows = JsonConvert.DeserializeObject<List<string>>(thisTask.JsonData);
            }

            viewSource = new CreateMultipleChoiceViewSource(rows, TableView);
            TableView.Source = viewSource;
            TableView.RowHeight = UITableView.AutomaticDimension;
            TableView.EstimatedRowHeight = 100;
            TableView.AllowsSelection = false;
            TableView.ReloadData();

            AddOptionButton.TouchUpInside += AddOptionPressed;
        }

        private void AddOptionPressed(object sender, EventArgs e)
        {
            UIAlertController alertController = UIAlertController.Create(
                "New Option",
                "Enter your new choice option below:",
                UIAlertControllerStyle.Alert);

            UITextField field = null;

            // Add and configure text field
            alertController.AddTextField((textField) =>
            {
                // Save the field
                field = textField;
                field.ReturnKeyType = UIReturnKeyType.Done;
                field.ClearButtonMode = UITextFieldViewMode.WhileEditing;

            });

            alertController.AddAction(UIAlertAction.Create("Add", UIAlertActionStyle.Default, (actionOK) =>
            {

                if (!string.IsNullOrWhiteSpace(field.Text))
                {
                    viewSource.AddRow(field.Text);
                }
            }));

            // Add cancel button
            alertController.AddAction(UIAlertAction.Create("Cancel", UIAlertActionStyle.Cancel, null));

            PresentViewController(alertController, true, () => { });
        }

        protected override void FinishButton_TouchUpInside(object sender, EventArgs e)
        {
            if (UpdateBasicTask())
            {
                if (viewSource.Rows.Count < 2)
                {
                    AppUtils.ShowSimpleDialog(this, "Add More Choices", "At least two possible answers are required.", "Got it");
                    return;
                }

                thisTask.JsonData = JsonConvert.SerializeObject(viewSource.Rows);

                UpdateActivity();
                Unwind();
            }
        }

    }
}

#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;
using FFImageLoading;
using Foundation;
using OurPlace.Common.Models;
using UIKit;

namespace OurPlace.iOS
{
    public partial class CreateTaskCell : UITableViewCell
    {
        public static NSString Key = new NSString("CreateTaskCell");

        private LearningTask taskData;
        private Action<LearningTask> editTask;
        private Action<LearningTask> editChildren;

        public CreateTaskCell(IntPtr handle) : base(handle)
        {
        }

        public void UpdateContent(LearningTask data, Action<LearningTask> editClicked, Action<LearningTask> manageChildrenClicked, bool showChildren)
        {
            taskData = data;
            editTask = editClicked;
            editChildren = manageChildrenClicked;

            ImageService.Instance.LoadUrl(data.TaskType.IconUrl).Into(TaskTypeIcon);
            TaskType.Text = data.TaskType.DisplayName;
            TaskDescription.Text = data.Description;

            EditButton.TouchUpInside -= EditPressed;
            EditButton.TouchUpInside += EditPressed;

            ManageChildrenButton.Alpha = (showChildren) ? 1 : 0;

            ManageChildrenButton.TouchUpInside -= ManageChildrenPressed;
            ManageChildrenButton.TouchUpInside += ManageChildrenPressed;
        }

        private void EditPressed(object sender, EventArgs e)
        {
            editTask?.Invoke(taskData);
        }

        private void ManageChildrenPressed(object sender, EventArgs e)
        {
            editChildren?.Invoke(taskData);
        }
    }
}

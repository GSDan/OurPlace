#region copyright
/*
    OurPlace is a mobile learning platform, designed to support communities
    in creating and sharing interactive learning activities about the places they care most about.
    https://github.com/GSDan/OurPlace
    Copyright (C) 2018 Dan Richardson

    This program is free software: you can redistribute it and/or modify
    it under the terms of the GNU General Public License as published by
    the Free Software Foundation, either version 3 of the License, or
    (at your option) any later version.

    This program is distributed in the hope that it will be useful,
    but WITHOUT ANY WARRANTY; without even the implied warranty of
    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with this program.  If not, see https://www.gnu.org/licenses.
*/
#endregion

// This file has been autogenerated from a class added in the UI designer.

using System;
using System.Collections.Generic;
using System.IO;
using AVFoundation;
using CoreGraphics;
using CoreMedia;
using FFImageLoading;
using Foundation;
using UIKit;

namespace OurPlace.iOS
{
    public partial class ImageResultCell : UICollectionViewCell
	{
        private string filePath;

		public ImageResultCell (IntPtr handle) : base (handle)
		{
		}

        // Video thumbnail code:
        // https://forums.xamarin.com/discussion/61903/code-snippet-how-to-generate-video-thumbnail

        public void UpdateContent(string filePath)
        {
            this.filePath = filePath;

            string cache = Common.LocalData.Storage.GetCacheFolder();

            string extension = Path.GetExtension(filePath);

            ImageView.BackgroundColor = UIColor.White;
            ImageView.ContentMode = UIViewContentMode.ScaleAspectFill;

            if(extension == ".mov")
            {
                // Get thumbnail
                AVAsset asset = AVAsset.FromUrl(NSUrl.FromFilename(Path.Combine(cache, filePath)));
                CMTime time = new CMTime(1, 1);

                using (AVAssetImageGenerator imageGenerator = AVAssetImageGenerator.FromAsset(asset))
                {
                    imageGenerator.AppliesPreferredTrackTransform = true;

                    using(CGImage imageRef = imageGenerator.CopyCGImageAtTime(time, out CMTime actualTime, out NSError err))
                    {
                        if (err != null || imageRef == null)
                        {
                            Console.WriteLine("Error loading thumbnail: " + err?.LocalizedDescription);
                            return;
                        }

                        var thumbnail = UIImage.FromImage(imageRef);
                        ImageView.Image = thumbnail;
                    }
                }
            }
            else if((new List<string>{ ".m4a", ".mp3", ".wav" }).Contains(extension))
            {
                ImageView.Image = UIImage.FromBundle("AudioIcon");
                ImageView.BackgroundColor = UIColor.FromRGB(76, 175, 80);
                ImageView.ContentMode = UIViewContentMode.Center;
            }
            else
            {
                ImageService.Instance.LoadFile(Path.Combine(cache, filePath)).Into(ImageView); 
            }
        }


	}
}